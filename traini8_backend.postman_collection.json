{
	"info": {
		"_postman_id": "b56c02b3-a40d-4262-a8d5-a33d97abaae6",
		"name": "traini8_backend",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23461426"
	},
	"item": [
		{
			"name": "Get all training center",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8097/api/v1/get/all/training-center",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8097",
					"path": [
						"api",
						"v1",
						"get",
						"all",
						"training-center"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Create new training center",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"centerName\": \"Dharansh\",\n  \"centerCode\": \"VIT632014223\",\n  \"address\": {\n    \"detailedAddress\": \"VIT Univ\",\n    \"city\": \"Vellore\",\n    \"state\": \"Tamil Nadu\",\n    \"pincode\": \"632014\"\n  },\n  \"capacity\": 30000,\n  \"coursesOffered\": [\n    \"Java\",\n    \"Spring Boot\",\n    \"MongoDB\",\n    \"Computer Science\"\n  ],\n  \"email\": \"dharansh@trainingcenter.com\",\n  \"phone\": \"+919929655653\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8097/api/v1/create/training-center",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8097",
					"path": [
						"api",
						"v1",
						"create",
						"training-center"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Update data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8097/api/v1/search/training-center?name=VIT",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8097",
					"path": [
						"api",
						"v1",
						"search",
						"training-center"
					],
					"query": [
						{
							"key": "name",
							"value": "VIT"
						}
					]
				},
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}